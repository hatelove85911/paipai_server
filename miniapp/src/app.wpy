<style lang="less">
@import './style/weui.less';
page{
    background-color: #F8F8F8;
    font-size: 16px;
    font-family: -apple-system-font,Helvetica Neue,Helvetica,sans-serif;
}
.page__hd {
    padding: 40px;
}
.page__bd {
    padding-bottom: 40px;
}
.page__bd_spacing {
    padding-left: 15px;
    padding-right: 15px;
}

.page__ft{
    padding-bottom: 10px;
    text-align: center;
}

.page__title {
    text-align: left;
    font-size: 20px;
    font-weight: 400;
}

.page__desc {
    margin-top: 5px;
    color: #888888;
    text-align: left;
    font-size: 14px;
}
</style>

<script>
import wepy from 'wepy'
import Promise from 'promise-polyfill';
import {createClass} from './asteroidAPI.js'
import immutableCollectionMixin from "asteroid-immutable-collections-mixin";

export default class extends wepy.app {
  config = {
    pages: [
      'pages/index'
    ],
    window: {
      backgroundTextStyle: 'light',
      navigationBarBackgroundColor: '#fff',
      navigationBarTitleText: 'WeChat',
      navigationBarTextStyle: 'black'
    }
  }

  constructor () {
    super()
    this.use('promisify');
    this.use('requestfix')
  }

  globalData = {
    userInfo: null
  }

  onLaunch() {
    const that = this
    const Asteroid = createClass([immutableCollectionMixin])
    // Connect to a Meteor backend
    this.asteroid = new Asteroid({
        endpoint: "ws://localhost:3000/websocket",
        SocketConstructor: function (endpoint) {
          var socket = {
            send: msg => wx.sendSocketMessage({
              data: msg
            }),
            close: () => wx.closeSocket()
          }
          wx.onSocketOpen(function () {
            socket.onopen && socket.onopen()
          })
          wx.onSocketClose(function () {
            socket.onclose && socket.onclose()
          })
          wx.onSocketError(function () {
            socket.onerror && socket.onerror()
          })
          wx.onSocketMessage(function (res) {
            socket.onmessage && socket.onmessage(res)
          })
          wx.connectSocket({
            url: endpoint
          })
          return socket
        }
    });

    this.loginPromise = wepy.login()
    // fetch wx user info
    this.loginPromise.then(wepy.getUserInfo.bind(wepy))
      .then(function (res) {
        that.globalData.userInfo = res.userInfo
      })
  }
}
</script>
